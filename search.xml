<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>控制流</title>
      <link href="/2025/03/22/%E6%8E%A7%E5%88%B6%E6%B5%81/"/>
      <url>/2025/03/22/%E6%8E%A7%E5%88%B6%E6%B5%81/</url>
      
        <content type="html"><![CDATA[<h1 id="控制流"><a href="#控制流" class="headerlink" title="控制流"></a>控制流</h1><blockquote><p>[!NOTE]</p><p>以下内容部分摘录自<code>《Python编程快速上手——让繁琐的工作自动化（第二版）》</code>，并加入了一些自己的理解，仅用于个人交流与学习，如涉及侵权请联系站长删除！</p></blockquote><h2 id="1-布尔值"><a href="#1-布尔值" class="headerlink" title="1.布尔值"></a>1.布尔值</h2><ul><li>首先我们引入一个布尔值的概念，它的数据类型只有两种：<code>True</code>和<code>False</code> </li><li>像其他值一样布尔值也用在表达式中，并且可以保存在变量中。</li></ul><h2 id="2-比较操作符"><a href="#2-比较操作符" class="headerlink" title="2.比较操作符"></a>2.比较操作符</h2><p>以下是几种比较常见的python中的比较操作符：</p><table><thead><tr><th align="center">操作符</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">&#x3D;&#x3D;</td><td align="center">等于</td></tr><tr><td align="center">!&#x3D;</td><td align="center">不等于</td></tr><tr><td align="center">&lt;</td><td align="center">小于</td></tr><tr><td align="center">&gt;</td><td align="center">大于</td></tr><tr><td align="center">&lt;&#x3D;</td><td align="center">小于等于</td></tr><tr><td align="center">&gt;&#x3D;</td><td align="center">大于等于</td></tr></tbody></table><h2 id="3-代码块"><a href="#3-代码块" class="headerlink" title="3.代码块"></a>3.代码块</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="built_in">input</span>(<span class="string">&#x27;please enter your name:&#x27;</span>)</span><br><span class="line">password = <span class="built_in">input</span>(<span class="string">&#x27;please enter your password:&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> name == <span class="string">&#x27;CYX&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Hello,CYX&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> password == <span class="string">&#x27;123456&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Access granted&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Wrong password&#x27;</span>)  </span><br><span class="line">       </span><br></pre></td></tr></table></figure><ul><li><p><strong>解释</strong>：首先我们用这串代码来引入代码块的概念</p><ul><li><p>代码块有三条规则：</p><p>1.缩进增加时，代码块开始。</p><p>2.代码块可以包含其他代码块。</p><p>3.缩进减少为0，或与外面包围代码块对齐代码块就结束了。</p></li></ul><p>如上述例子中，其中一个代码块开始于<code>print(&#39;Hello,CYX&#39;)</code>,并且包含之后的所有行</p></li></ul><h2 id="4-if-else-语句"><a href="#4-if-else-语句" class="headerlink" title="4. if...else 语句"></a>4. <code>if...else</code> 语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># if语句的组成</span></span><br><span class="line"><span class="comment"># 1.if关键字</span></span><br><span class="line"><span class="comment"># 2.条件（求值为True或False的表达式）</span></span><br><span class="line"><span class="comment"># 3.冒号（：）</span></span><br><span class="line"><span class="comment"># 4.在下一行开始，缩进的代码块（if的子句）</span></span><br><span class="line">name = <span class="built_in">input</span>(<span class="string">&#x27;please enter your name:&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> name == <span class="string">&#x27;CYX&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;hello &#x27;</span> + name)</span><br><span class="line"><span class="comment"># else语句的组成</span></span><br><span class="line"><span class="comment"># 1.else关键字</span></span><br><span class="line"><span class="comment"># 2.冒号（：）</span></span><br><span class="line"><span class="comment"># 3.在下一行开始，缩进的代码块（else的子句）</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;hello stranger!&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>解释</strong>：<code>if...else</code> 语句用于条件判断。如果条件满足执行 <code>if</code> 语句块，否则执行 <code>else</code> 语句块。</li></ul><h2 id="5-elif-语句"><a href="#5-elif-语句" class="headerlink" title="5. elif 语句"></a>5. <code>elif</code> 语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># elif语句的使用，与C语言中的else if语句类似</span></span><br><span class="line"><span class="comment"># elif语句的组成：</span></span><br><span class="line"><span class="comment"># 1.elif关键字</span></span><br><span class="line"><span class="comment"># 2.条件（求值为True或False的表达式）</span></span><br><span class="line"><span class="comment"># 3.冒号（：）</span></span><br><span class="line"><span class="comment"># 4.在下一行开始，缩进的代码块（elif的子句）</span></span><br><span class="line">name = <span class="string">&#x27;KKK&#x27;</span></span><br><span class="line">age = <span class="number">3000</span></span><br><span class="line"><span class="keyword">if</span> name == <span class="string">&#x27;CYX&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Hi CYX&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> age &lt; <span class="number">12</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;you are not CYX, kiddo&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> age &gt; <span class="number">2000</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Unlike you, CYX is not an undead, immortal vampire&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> age &gt; <span class="number">100</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;you are not CYX, grannie&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>解释</strong>：<code>elif</code> 是 <code>else if</code> 的缩写，可以用于多个条件判断。程序依次检查每个条件，直到有条件满足。</li></ul><h2 id="6-while-循环"><a href="#6-while-循环" class="headerlink" title="6. while 循环"></a>6. <code>while</code> 循环</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># while循环语句的组成</span></span><br><span class="line"><span class="comment"># 1.while关键字</span></span><br><span class="line"><span class="comment"># 2.条件（求值为True或False的表达式）</span></span><br><span class="line"><span class="comment"># 3.冒号</span></span><br><span class="line"><span class="comment"># 4.while的子句</span></span><br><span class="line">name = <span class="built_in">input</span>(<span class="string">&#x27;please enter your name:&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span> name != <span class="string">&#x27;CYX&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;WRONG!!&#x27;</span>)</span><br><span class="line">    name = <span class="built_in">input</span>(<span class="string">&#x27;please enter your name, again:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;RIGHT!&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>解释</strong>：<code>while</code> 循环会不断执行，直到条件不再满足。在此例中，程序会不断要求用户输入正确的名字，直到输入 <code>&#39;CYX&#39;</code> 为止。</li></ul><h2 id="7-break-语句"><a href="#7-break-语句" class="headerlink" title="7. break 语句"></a>7. <code>break</code> 语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># break是一个捷径，可以让你提前跳出while的子句。遇到break语句就会马上退出while的子句</span></span><br><span class="line">name = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;please enter your name:&#x27;</span>)</span><br><span class="line">    name = <span class="built_in">input</span>()</span><br><span class="line">    <span class="keyword">if</span> name == <span class="string">&#x27;CYX&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Thank you!&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>解释</strong>：<code>break</code> 语句可以让程序提前退出循环。在这个例子中，当输入为 <code>&#39;CYX&#39;</code> 时，<code>break</code> 会终止 <code>while</code> 循环。</li></ul><h2 id="8-continue-语句"><a href="#8-continue-语句" class="headerlink" title="8. continue 语句"></a>8. <code>continue</code> 语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># continue语句用于循环内部。当程序执行遇到continue语句就会马上跳回到循环开始，重新对循环条件求值</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Who are you?&#x27;</span>)</span><br><span class="line">    name = <span class="built_in">input</span>()</span><br><span class="line">    <span class="keyword">if</span> name != <span class="string">&#x27;CYX&#x27;</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;hello, CYX. What is the password?&#x27;</span>)</span><br><span class="line">    password = <span class="built_in">input</span>()</span><br><span class="line">    <span class="keyword">if</span> password == <span class="string">&#x27;123456&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;access granted&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>解释</strong>：<code>continue</code> 语句会跳过当前循环的剩余部分，直接进行下一次循环。在此例中，只有输入 <code>&#39;CYX&#39;</code> 时，才会继续执行后续的代码。</li></ul><h2 id="9-for-循环与-range-函数"><a href="#9-for-循环与-range-函数" class="headerlink" title="9.for 循环与 range() 函数"></a>9.<code>for</code> 循环与 <code>range()</code> 函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在条件为True时while循环会执行，如果想让代码块执行固定的次数，可以通过for循环和range()函数来实现</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;My name is&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Jimmy Five Times (&#x27;</span> + <span class="built_in">str</span>(i) + <span class="string">&#x27;)&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>解释</strong>：<code>for</code> 循环与 <code>range()</code> 函数结合使用，<code>range(5)</code> 生成从 0 到 4 的整数序列，用于循环固定次数。以下是一个<code>for</code>循环的例子：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">101</span>):</span><br><span class="line">    <span class="built_in">sum</span> = <span class="built_in">sum</span> + i</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>解释</strong>：<code>for</code> 循环用于迭代指定的范围。在此例中，计算从 0 到 100 所有整数的和。</li></ul><h2 id="10-range-函数"><a href="#10-range-函数" class="headerlink" title="10. range() 函数"></a>10. <code>range()</code> 函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>, <span class="number">16</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line"><span class="comment">#第一个参数是for循环变量开始的值 第二个参数是上限但不包括他</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">10</span>, <span class="number">2</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line"><span class="comment">#range函数也可以有第三个值 分别是起始值 终止值 和 步长</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="comment">#range函数也可以用负数作为步长让循环计数逐渐减少</span></span><br></pre></td></tr></table></figure><ul><li><strong>解释</strong>：<code>range()</code> 函数用于生成指定范围的数字序列，支持起始值、结束值和步长的设置。可以用来控制循环的起始值、终止值及步进。</li></ul><h2 id="11-导入模块"><a href="#11-导入模块" class="headerlink" title="11. 导入模块"></a>11. 导入模块</h2><ul><li><p>python可以调用一组基本的函数，成为内置函数（如 <code>print()</code>，<code>input()</code>，<code>len()</code>）。</p></li><li><p>python也包括一组模块，称为“标准库”每个模块都是一个python程序，包含一组相关的函数，可以嵌入你程序中,例如:<code>math</code>有与数学相关的函数,，<code>random</code>有与随机数相关的函数</p></li><li><p><code>import</code>用来导入这些函数，他的组成部分为：</p><p>1.<code>import</code>关键字 </p><p>2.模块的名称 </p><p>3.可选的更多模块的名称 至今用逗号隔开</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入random模块，并使用random.randint()生成随机数</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="built_in">print</span>(random.randint(<span class="number">1</span>, <span class="number">10</span>))</span><br></pre></td></tr></table></figure><ul><li><strong>解释</strong>：<code>import</code> 用于导入外部模块，例如 <code>random</code> 模块。此示例中使用 <code>random.randint()</code> 生成一个范围在 1 到 10 之间的随机整数。</li></ul><p><code>form import</code> 包括<code>form</code>关键字<code>板块名称</code>和<code>import</code>关键字和一个星号<code>*</code>，这种形式的<code>import</code>语句调用如<code>random</code>模板中的函数时不需要<code>random. </code>前缀</p><h2 id="12-sys-exit-函数提前结束程序"><a href="#12-sys-exit-函数提前结束程序" class="headerlink" title="12. sys.exit() 函数提前结束程序"></a>12. <code>sys.exit()</code> 函数提前结束程序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当程序执行到指令底部时总是会终止，但是调用sys.exit()函数可以让程序提前终止或退出</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Type exit to exit.&#x27;</span>)</span><br><span class="line">    response = <span class="built_in">input</span>()</span><br><span class="line">    <span class="keyword">if</span> response == <span class="string">&#x27;exit&#x27;</span>:</span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;You typed &#x27;</span> + response + <span class="string">&#x27;.&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>解释</strong>：<code>sys.exit()</code> 用于终止程序的执行。当用户输入 <code>&#39;exit&#39;</code> 时，程序会提前退出。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python基础</title>
      <link href="/2025/03/21/Python%E5%9F%BA%E7%A1%80/"/>
      <url>/2025/03/21/Python%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="Python基础"><a href="#Python基础" class="headerlink" title="Python基础"></a>Python基础</h1><blockquote><p>[!NOTE]</p><p>以下内容部分摘录自<code>《Python编程快速上手——让繁琐的工作自动化（第二版）》</code>，并加入了一些自己的理解，仅用于个人交流与学习，如涉及侵权请联系站长删除！</p></blockquote><h2 id="1-第一个Python程序"><a href="#1-第一个Python程序" class="headerlink" title="1. 第一个Python程序"></a>1. 第一个Python程序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这个程序打印问候并询问我的名字</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Hello world!&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;What is your name?&#x27;</span>)</span><br><span class="line"></span><br><span class="line">myName = <span class="built_in">input</span>(<span class="string">&#x27;Your name is:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;It is good to meet you,&#x27;</span> + myName)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The length of your name is:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(myName))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;What is your age?&#x27;</span>)</span><br><span class="line">myAge = <span class="built_in">input</span>(<span class="string">&#x27;Your age is:&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;you will be &#x27;</span> + <span class="built_in">str</span>(<span class="built_in">int</span>(myAge) + <span class="number">1</span>) + <span class="string">&#x27; in a year&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>解释</strong>：这是一个简单的程序，打印问候语，询问用户的名字，并计算名字的长度。还询问用户的年龄，并预测他们明年的年龄。</li></ul><h2 id="2-整数和浮点数的转换"><a href="#2-整数和浮点数的转换" class="headerlink" title="2. 整数和浮点数的转换"></a>2. 整数和浮点数的转换</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(<span class="number">0</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(-<span class="number">3.14</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(<span class="string">&#x27;42&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(<span class="number">42</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(<span class="string">&#x27;-99&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(-<span class="number">99</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">float</span>(<span class="string">&#x27;3.14&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">float</span>(<span class="number">3.14</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">float</span>(<span class="string">&#x27;10&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">float</span>(<span class="number">10</span>))</span><br></pre></td></tr></table></figure><ul><li><strong>解释</strong>：这段代码展示了不同类型之间的转换：<ul><li><code>str()</code>：将数字转换为字符串。</li><li><code>int()</code>：将字符串和数字转换为整数。</li><li><code>float()</code>：将字符串和数字转换为浮动点数。</li><li>注意：<code>int(1.25)</code>是有效的，但<code>int(&#39;1.25&#39;)</code>会报错，因为它要求字符串为整数。</li></ul></li></ul><h2 id="3-获取字符串的长度"><a href="#3-获取字符串的长度" class="headerlink" title="3. 获取字符串的长度"></a>3. 获取字符串的长度</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(<span class="string">&#x27;aaa&#x27;</span>))</span><br></pre></td></tr></table></figure><ul><li><strong>解释</strong>：<code>len()</code>函数返回字符串的长度。在这个例子中，字符串<code>&#39;aaa&#39;</code>有3个字符。</li></ul><h2 id="4-四舍五入函数-round"><a href="#4-四舍五入函数-round" class="headerlink" title="4. 四舍五入函数 round()"></a>4. 四舍五入函数 <code>round()</code></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">round</span>(<span class="number">1.4</span>), <span class="built_in">round</span>(<span class="number">1.6</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">round</span>(<span class="number">1.23456</span>, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">round</span>(<span class="number">2.5</span>), <span class="built_in">round</span>(<span class="number">3.5</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">round</span>(-<span class="number">1.2</span>), <span class="built_in">round</span>(-<span class="number">3.8</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">round</span>(<span class="number">0.1</span> + <span class="number">0.2</span>, <span class="number">1</span>))</span><br></pre></td></tr></table></figure><ul><li><strong>解释</strong>：<code>round()</code>函数用于四舍五入数字到最接近的整数或指定的小数位数。 <ul><li><strong>银行家舍入法</strong>：当数字后面是<code>.5</code>时，Python会将其舍入到最接近的偶数（例如，<code>round(2.5)</code> → <code>2</code>，<code>round(3.5)</code> → <code>4</code>）。</li><li><strong>处理浮点数精度问题</strong>：<code>round(0.1 + 0.2, 1)</code>可以修正浮点数计算中的误差，得到更精确的结果。</li></ul></li></ul><h2 id="5-使用-str-进行字符串拼接"><a href="#5-使用-str-进行字符串拼接" class="headerlink" title="5. 使用 str() 进行字符串拼接"></a>5. 使用 <code>str()</code> 进行字符串拼接</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;I am &#x27;</span> + <span class="built_in">str</span>(<span class="number">29</span>) + <span class="string">&#x27; years old&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>解释</strong>：在Python中，不能直接将字符串与整数进行拼接。要将整数与字符串拼接，需要使用<code>str()</code>函数将整数转换为字符串。</li></ul><h2 id="其他注意事项："><a href="#其他注意事项：" class="headerlink" title="其他注意事项："></a>其他注意事项：</h2><ul><li><strong>第一个Python程序</strong>：可以使用<code>input()</code>来获取用户输入。然而，需要将输入转换为正确的类型（例如，对于数字输入使用<code>int()</code>）。</li><li><strong>类型转换</strong>：Python提供了一些函数，如<code>str()</code>、<code>int()</code>和<code>float()</code>，用于在整数、浮动点数和字符串之间进行类型转换。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MosHSasA</title>
      <link href="/2025/03/19/%E6%B5%8B%E8%AF%95/"/>
      <url>/2025/03/19/%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h2 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h2>]]></content>
      
      
      <categories>
          
          <category> 随想 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 页脚与头图透明 */#footer {    background: transparent !important;  }  #page-header {    background: transparent !important;  }    /* 白天模式遮罩透明 */  #footer::before {    background: transparent !important;  }  #page-header::before {    background: transparent !important;  }    /* 夜间模式遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }/* 文章双侧栏bug修复 *//* 翻页按钮居中 */#pagination {  width: 100%;  margin: auto;}/*导航栏魔改*//* 一级菜单居中 */#nav .menus_items {  position: absolute !important;  width: fit-content !important;  left: 50% !important;  transform: translateX(-50%) !important;}/* 子菜单横向展示 */#nav .menus_items .menus_item:hover .menus_item_child {  display: flex !important;}/* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */.menus_items .menus_item:nth-child(5) .menus_item_child {  left: -38px;}/*黑夜霓虹灯CSS部分*//* 夜间模式菜单栏发光字 */[data-theme="dark"] #nav .site-page,[data-theme="dark"] #nav .menus_items .menus_item .menus_item_child li a {  text-shadow: 0 0 2px rgb(255, 215, 0) !important;}/* 手机端适配 */[data-theme="dark"] #sidebar #sidebar-menus .menus_items .site-page {  text-shadow: 0 0 2px rgb(255, 215, 0) !important;}/* 闪烁变动颜色连续渐变 */#site-name,#site-title,#site-subtitle,#post-info,.author-info__name,.author-info__description {  transition: text-shadow 1s linear !important;}/* 背景宇宙星光  */#universe{  display: block;  position: fixed;  margin: 0;  padding: 0;  border: 0;  outline: 0;  left: 0;  top: 0;  width: 100%;  height: 100%;  pointer-events: none;  /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */  z-index: -1;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js"/>
      <url>/js/runtime.js</url>
      
        <content type="html"><![CDATA[var now = new Date;function createtime() {now.setTime(now.getTime() + 1e3);var e = new Date("03/20/2025 00:00:00"),t = Math.trunc(234e8 + (now - e) / 1e3 * 17),a = (t / 1496e5).toFixed(6),o = new Date("03/20/2025 00:00:00"),n = (now - o) / 1e3 / 60 / 60 / 24,r = Math.floor(n),i = (now - o) / 1e3 / 60 / 60 - 24 * r,s = Math.floor(i);1 == String(s).length && (s = "0" + s);var d = (now - o) / 1e3 / 60 - 1440 * r - 60 * s,l = Math.floor(d);1 == String(l).length && (l = "0" + l);var g = (now - o) / 1e3 - 86400 * r - 3600 * s - 60 * l,b = Math.round(g);1 == String(b).length && (b = "0" + b);let c = "";c = s < 18 && s >= 9 ? `<div style="font-size:13px;font-weight:bold">本站已经运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 旅行者 1 号当前距离地球 ${t} 千米，约为 ${a} 个天文单位 🚀</div>` : `<div style="font-size:13px;font-weight:bold">本站已经运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 旅行者 1 号当前距离地球 ${t} 千米，约为 ${a} 个天文单位 🚀</div>`, document.getElementById("workboard") && (document.getElementById("workboard").innerHTML = c)}setInterval((() => {createtime()}), 1e3);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/universe.js"/>
      <url>/js/universe.js</url>
      
        <content type="html"><![CDATA[function dark() {window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;var n, e, i, h, t = .05,s = document.getElementById("universe"),o = !0,a = "180,184,240",r = "226,225,142",d = "226,225,224",c = [];function f() {n = window.innerWidth, e = window.innerHeight, i = .216 * n, s.setAttribute("width", n), s.setAttribute("height", e)}function u() {h.clearRect(0, 0, n, e);for (var t = c.length, i = 0; i < t; i++) {var s = c[i];s.move(), s.fadeIn(), s.fadeOut(), s.draw()}}function y() {this.reset = function() {this.giant = m(3), this.comet = !this.giant && !o && m(10), this.x = l(0, n - 10), this.y = l(0, e), this.r = l(1.1, 2.6), this.dx = l(t, 6 * t) + (this.comet + 1 - 1) * t * l(50, 120) + 2 * t, this.dy = -l(t, 6 * t) - (this.comet + 1 - 1) * t * l(50, 120), this.fadingOut = null, this.fadingIn = !0, this.opacity = 0, this.opacityTresh = l(.2, 1 - .4 * (this.comet + 1 - 1)), this.do = l(5e-4, .002) + .001 * (this.comet + 1 - 1)}, this.fadeIn = function() {this.fadingIn && (this.fadingIn = !(this.opacity > this.opacityTresh), this.opacity += this.do)}, this.fadeOut = function() {this.fadingOut && (this.fadingOut = !(this.opacity < 0), this.opacity -= this.do / 2, (this.x > n || this.y < 0) && (this.fadingOut = !1, this.reset()))}, this.draw = function() {if (h.beginPath(), this.giant) h.fillStyle = "rgba(" + a + "," + this.opacity + ")", h.arc(this.x, this.y, 2, 0, 2 * Math.PI, !1);else if (this.comet) {h.fillStyle = "rgba(" + d + "," + this.opacity + ")", h.arc(this.x, this.y, 1.5, 0, 2 * Math.PI, !1);for (var t = 0; t < 30; t++) h.fillStyle = "rgba(" + d + "," + (this.opacity - this.opacity / 20 * t) + ")", h.rect(this.x - this.dx / 4 * t, this.y - this.dy / 4 * t - 2, 2, 2), h.fill()} else h.fillStyle = "rgba(" + r + "," + this.opacity + ")", h.rect(this.x, this.y, this.r, this.r);h.closePath(), h.fill()}, this.move = function() {this.x += this.dx, this.y += this.dy, !1 === this.fadingOut && this.reset(), (this.x > n - n / 4 || this.y < 0) && (this.fadingOut = !0)}, setTimeout(function() {o = !1}, 50)}function m(t) {return Math.floor(1e3 * Math.random()) + 1 < 10 * t}function l(t, i) {return Math.random() * (i - t) + t}f(), window.addEventListener("resize", f, !1),function() {h = s.getContext("2d");for (var t = 0; t < i; t++) c[t] = new y, c[t].reset();u()}(),function t() {document.getElementsByTagName('html')[0].getAttribute('data-theme') == 'dark' && u(), window.requestAnimationFrame(t)}()};dark()]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/light.js"/>
      <url>/js/light.js</url>
      
        <content type="html"><![CDATA[// 霓虹灯效果// 颜色数组var arr = ["#39c5bb", "#f14747", "#f1a247", "#f1ee47", "#b347f1", "#1edbff", "#ed709b", "#5636ed"];// 颜色索引var idx = 0;// 切换颜色function changeColor() {    // 仅夜间模式才启用    if (document.getElementsByTagName('html')[0].getAttribute('data-theme') == 'dark') {        if (document.getElementById("site-name"))            document.getElementById("site-name").style.textShadow = arr[idx] + " 0 0 15px";        if (document.getElementById("site-title"))            document.getElementById("site-title").style.textShadow = arr[idx] + " 0 0 15px";        if (document.getElementById("site-subtitle"))            document.getElementById("site-subtitle").style.textShadow = arr[idx] + " 0 0 10px";        if (document.getElementById("post-info"))            document.getElementById("post-info").style.textShadow = arr[idx] + " 0 0 5px";        try {            document.getElementsByClassName("author-info__name")[0].style.textShadow = arr[idx] + " 0 0 12px";            document.getElementsByClassName("author-info__description")[0].style.textShadow = arr[idx] + " 0 0 12px";        } catch {                    }        idx++;        if (idx == 8) {            idx = 0;        }    } else {        // 白天模式恢复默认        if (document.getElementById("site-name"))            document.getElementById("site-name").style.textShadow = "#1e1e1ee0 1px 1px 1px";        if (document.getElementById("site-title"))            document.getElementById("site-title").style.textShadow = "#1e1e1ee0 1px 1px 1px";        if (document.getElementById("site-subtitle"))            document.getElementById("site-subtitle").style.textShadow = "#1e1e1ee0 1px 1px 1px";        if (document.getElementById("post-info"))            document.getElementById("post-info").style.textShadow = "#1e1e1ee0 1px 1px 1px";        try {            document.getElementsByClassName("author-info__name")[0].style.textShadow = "";            document.getElementsByClassName("author-info__description")[0].style.textShadow = "";        } catch {                    }    }}// 开启计时器window.onload = setInterval(changeColor, 1200);]]></content>
      
    </entry>
    
    
  
</search>
